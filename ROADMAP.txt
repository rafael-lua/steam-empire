/** Simple documentation of overall development and log **/

### Current and future needed tasks are listed here as reminders as they come to my mind.



# ---------------------------------------------------------------------------- #
#                                  /* Queue */                                 #
# ---------------------------------------------------------------------------- #

[] Check for DEBUG before doing any modifications on a save file in production to guard against possible conflicts. 

[] When capacities are hit (Like coal), the employers still keep working and causing costs to the player by default. Give the player an config option to reset such situation in case the player wnats to. At same time, allow the idea of employing more than it is needed as a viable strategy against unemployement.
[] Unemployed debuffs should be increased and decreased overtime, not at once.

[] Refactor any component price to be on gamedata instead of components



# ------------------------------- /* Current */ ------------------------------ #

[] Add the update method and reportings for alchemy when it becomes automated
[] Add the upgrade method for making the alchemy automated with AP costs
[] Add update logic for manual alchemy and reportings

# ---------------------------------------------------------------------------- #
#                                   /* Log */                                  #
# ---------------------------------------------------------------------------- #

06/01/2021

[x] Add manual state mechanic for alchemy, which is the initial one

05/28/2021

[x] Added task system for cheap event report and reaction

05/23/2021

[x] Explain to the player that savages don't like villages or cities and they will start to move away as the population grows.
[x] Every time a new citizen is gained, an savage is removed, so current employement is not affected.
[x] Add the tavern logic for its completion

05/22/2021

[x] REFACTOR evevy small component that is possible into common reusable templates with the <slot> sintaxe and gameData.

05/20/2021

[x] Make alchemy table be much easier and important than tavern initially
[x] Add alchemy table to craftings to enable the alchemy menu

05/19/2021

[x] Refactor components with gold values to use the gold component
[x] Refactor all buttons (employ, reset, ...) to use buttons component
[x] Create a buttons component

05/17/2021

[x] Add the savages mechanics for population after acquiring the item {map #1}

05/16/2021

[x] Add the debug state and red signal for development
[x] Add a gold component for formatting the coin with its value easily

05/12/2021

[x] Add the population competency to the side menu.
[x] Add the employement ratio (n% of total population) on the employed value in the population section on the left side menu.

05/11/2021

[x] Add notification system





# ---------------------------------------------------------------------------- #
#                             MAIN FEATURES TREE                               #
# ---------------------------------------------------------------------------- #

Game
  |_Achievements: Several objectives that player most complete. Fundamentally, completing them all is the end game.
    |_Achievement Points: Can be used mostly for upgrading alchemy for passive generation of resources.
  |_Resources
    |_Coal
      |_Capacity 
    |_Gold
    |_Population
      |_Status
        |_Proficiency: Crafting effiency
        |_Competency: Resources generation efficiency
        |_Growth: Population passive increase overtime. New units are generated.
        |_Employed
      |_Happiness: A factor multiplier for the player's civilization status. It takes the (x)50% form, where the x represents the base multiplier for the population and the n% is a value between 1 and 100 on the current population status values. Example: If the base multiplier is 2 and competency is 100, competency will be 200. The % is a value that when hits 100%, increases the base multipler permanently by 1. The % is affected by employement ratio, season effects, events and associations.

Population
  |_Savages: Special unit that the player can use as population at the beginning of the game.
  |_Population: Group of units that player can employ into differents tasks to generate resources or other activities. They cost gold.
  |_Events: Actions that the player can spend resources on every week/month/season/year to boost population happiness %, but it is a expense that don't give any other return (Except for Achievements)

Mines
  |_Coal Mine: Units and machines can be employed into coal mines to collect coal over time.

Market
  |_Nomads: NPCs to trade with. They buy a limited amount of coal that resets every week. They sell useful goods for gold.
    |_Buy
      |_Coal
    |_Sell
      |_Stone Equipment: Boosts popualtion competency
      |_Crafting Tools: Open crafting menu
      |_Map #1: Reveals Water, Barley and Wood resources. Reveals Savages.
      |_Backpack: Increases coal capacity.
  |_Caravans: Group of travelers that visit the player every 3 months and stays for a month. They buy huge amounts of coal and can sell interesting goods.

Crafting
  |_Craft: Offers tons of possible constructions to upgrade the city and allow more possibilities.
    |_Tavern: First construction for the city and population generator.

Alchemy:
  |_Manual
    |_Element Conversion: Convert Coal into Gold manually. It takes some time and it is not very efficient. Available only on the first stages of the game.
  |_Auto
    |_Infusion: Generates coal online and offline in a constant rate.
      |_Upgrades: Can be directly upgraded with Achievement points.
    |_Chrysopoeia: Generates gold online and offline in a constant rate.
      |_Upgrades: Can be directly upgraded with Achievement points.

Warehouse (Manage and upgrade your storage capacities)
Engines (Gears to collect coal that have manutention costs and require either citizens employers or power)
Fuel (Generate power to feed inventions)
Management (Employ citizens into city management inventions as trains)
Research (Knewlegde resource)
Associations

Logs:
  |_Historic: Keep an historic of the last 25 entries that keeps track of important events for the player.

